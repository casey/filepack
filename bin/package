#!/usr/bin/env bash

set -euxo pipefail

DIST=`pwd`/dist

echo "Packaging filepack $TAG for $TARGET..."

test -f Cargo.lock || cargo generate-lockfile

echo "Installing rust toolchain for $TARGET..."
rustup target add $TARGET

if [[ $TARGET == aarch64-unknown-linux-musl ]]; then
  export CC=aarch64-linux-gnu-gcc
fi

echo "Building filepack..."
RUSTFLAGS="--deny warnings --codegen target-feature=+crt-static $TARGET_RUSTFLAGS" \
  cargo build --bin filepack --target $TARGET --release
EXECUTABLE=target/$TARGET/release/filepack

if [[ $OS == windows-latest ]]; then
  EXECUTABLE=$EXECUTABLE.exe
fi

echo "Copying release files..."
mkdir dist
cp -r \
  $EXECUTABLE \
  Cargo.lock \
  Cargo.toml \
  LICENSE \
  CONTRIBUTING \
  README.md \
  $DIST

echo "Creating filepack manifest..."
env -u CC cargo run create --deny all dist

echo "Creating release archive..."
cd $DIST
case $OS in
  ubuntu-latest | macos-latest)
    ARCHIVE=$DIST/filepack-$TAG-$TARGET.tar.gz
    tar czf $ARCHIVE *
    echo "archive=$ARCHIVE" >> $GITHUB_OUTPUT
    shasum -a 256 $ARCHIVE > $ARCHIVE.sha256sum
    ;;
  windows-latest)
    ARCHIVE=$DIST/filepack-$TAG-$TARGET.zip
    7z a $ARCHIVE *
    echo "archive=`pwd -W`/filepack-$TAG-$TARGET.zip" >> $GITHUB_OUTPUT
    sha256sum $ARCHIVE > $ARCHIVE.sha256sum
    ;;
esac
