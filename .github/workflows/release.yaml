name: Release

permissions:
  contents: write

on:
  push:
    tags:
    - '*'

defaults:
  run:
    shell: bash

jobs:
  manifest:
    runs-on: ubuntu-latest
    needs:
    - release
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust Toolchain
      run: rustup toolchain install stable --profile minimal
    - run: cargo build --release
    - env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: ./target/release/filepack download --github-release casey/filepack/${{ github.ref_name }} release
    - run: ./target/release/filepack create --deny all release
    - run: cat release/filepack.json
  release:
    strategy:
      matrix:
        target:
        - aarch64-apple-darwin
        - aarch64-pc-windows-msvc
        - aarch64-unknown-linux-musl
        - arm-unknown-linux-musleabihf
        - armv7-unknown-linux-musleabihf
        - x86_64-apple-darwin
        - x86_64-pc-windows-msvc
        - x86_64-unknown-linux-musl
        include:
        - target: aarch64-apple-darwin
          os: macos-latest
          target_rustflags: ''
        - target: aarch64-pc-windows-msvc
          os: windows-latest
          target_rustflags: ''
        - target: aarch64-unknown-linux-musl
          os: ubuntu-latest
          target_rustflags: '--codegen linker=aarch64-linux-gnu-gcc'
        - target: arm-unknown-linux-musleabihf
          os: ubuntu-latest
          target_rustflags: '--codegen linker=arm-linux-gnueabihf-gcc'
        - target: armv7-unknown-linux-musleabihf
          os: ubuntu-latest
          target_rustflags: '--codegen linker=arm-linux-gnueabihf-gcc'
        - target: x86_64-apple-darwin
          os: macos-latest
          target_rustflags: ''
        - target: x86_64-pc-windows-msvc
          os: windows-latest
        - target: x86_64-unknown-linux-musl
          os: ubuntu-latest
          target_rustflags: ''

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust Toolchain
      run: rustup toolchain install stable --profile minimal

    - name: Update apt
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update

    - name: Install AArch64 Toolchain
      if: ${{ matrix.target == 'aarch64-unknown-linux-musl' }}
      run: |
        sudo apt-get install gcc-aarch64-linux-gnu libc6-dev-i386

    - name: Install ARM Toolchain
      if: ${{ matrix.target == 'arm-unknown-linux-musleabihf' || matrix.target == 'armv7-unknown-linux-musleabihf' }}
      run: |
        sudo apt-get install gcc-arm-linux-gnueabihf
        sudo apt-get install binutils-arm-linux-gnueabihf
        sudo ln -s /usr/bin/arm-linux-gnueabihf-gcc /usr/bin/arm-linux-musleabihf-gcc

    - name: Install AArch64 Toolchain (Windows)
      if: ${{ matrix.target == 'aarch64-pc-windows-msvc' }}
      run: |
        rustup target add aarch64-pc-windows-msvc

    - name: Install musl-tools
      if: ${{ matrix.target == 'x86_64-unknown-linux-musl' }}
      run: |
        sudo apt-get install musl-tools

    - name: Release Type
      id: release-type
      run: |
        if [[ ${{ github.ref_name }} =~ ^[0-9]+[.][0-9]+[.][0-9]+$ ]]; then
            echo value=release >> $GITHUB_OUTPUT
        else
            echo value=prerelease >> $GITHUB_OUTPUT
        fi

    - name: Package
      id: package
      env:
        TARGET: ${{ matrix.target }}
        TAG: ${{ github.ref_name }}
        OS: ${{ matrix.os }}
        TARGET_RUSTFLAGS: ${{ matrix.target_rustflags }}
      run: ./bin/package
      shell: bash

    - name: Publish Archive
      uses: softprops/action-gh-release@v2.0.8
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        draft: false
        files: |
          ${{ steps.package.outputs.archive }}
          ${{ steps.package.outputs.archive }}.sha256sum
        prerelease: ${{ steps.release-type.outputs.value == 'prerelease' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish Changelog
      uses: softprops/action-gh-release@v2.0.8
      if: >-
        ${{
          startsWith(github.ref, 'refs/tags/')
          && matrix.target == 'x86_64-unknown-linux-musl'
        }}
      with:
        draft: false
        files: CHANGELOG.md
        prerelease: ${{ steps.ref-type.outputs.value != 'release' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
